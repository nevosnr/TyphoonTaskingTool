@using Microsoft.EntityFrameworkCore
@using TyphoonTaskingTool.Data
@using TyphoonTaskingTool.Models
@inject IDbContextFactory<TmscDbContext> DbFactory
@inherits OwningComponentBase<TmscDbContext>

<MudDialog>
	<DialogContent>
		@if (_request == null)
		{
			<MudProgressCircular Indeterminate="true"/>
		}
		else
		{
			<MudCard Class="pa-4">
				<MudCardHeader>
@* 					<MudText Typo="Typo.h6">
						Request Details
					</MudText> *@
				</MudCardHeader>
				<MudCardContent>
					<MudText><strong>Task ID:</strong>@_request.RequestTaskId</MudText>
					<MudText Color="Color.Error" Class="mt-1 mb-2">
						When quoting your task ID, Please use last 8 characters
					</MudText>
					<MudDivider Class="my-2" />
					<MudText><strong>Task: </strong>@_request.RequestTitle</MudText>
					<MudText><strong>Task Description: </strong>@_request.RequestTaskDescription</MudText>
				</MudCardContent>
			</MudCard>
		}
	</DialogContent>
	<DialogActions>
		<MudButton OnClick="CloseDialog" Color="Color.Primary">Close</MudButton>
	</DialogActions>
</MudDialog>

@code {
	[CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;
	[Parameter] public Guid RequestTaskId { get; set; }

	private Request? _request;

	protected override async Task OnInitializedAsync()
	{
		await using var ctx = await DbFactory.CreateDbContextAsync();
		_request = await ctx.Requests.AsNoTracking().SingleOrDefaultAsync(r => r.RequestTaskId == RequestTaskId);
	}

	private void CloseDialog()
	{
		MudDialog.Close(DialogResult.Ok(true));
	}

}
