@using Microsoft.EntityFrameworkCore
@using TyphoonTaskingTool.DTOs
@using TyphoonTaskingTool.Data
@using TyphoonTaskingTool.Models
@inject IDbContextFactory<TmscDbContext> DbFactory

<MudDialog>
	<DialogContent>
		@if (_request == null)
		{
			<MudProgressCircular Indeterminate="true"/>
		}
		else
		{
			
		}
	</DialogContent>
	<DialogActions>
		<MudButtonGroup>

		</MudButtonGroup>
	</DialogActions>
</MudDialog>

@code {

	[CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;]

	[Parameter]
	public Guid requestTaskId { get; set; }

	[SupplyParameterFromForm]
	private Request? _request { get; set; }

	protected override async Task OnInitializedAsync()
	{
		await using var ctx = await DbFactory.CreateDbContextAsync();
		_request = await ctx.Requests.FirstOrDefaultAsync(r => r.RequestTaskId == requestTaskId);
	}

	private async Task UpdateRequest()
	{
		
	}

}
