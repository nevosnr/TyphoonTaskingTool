// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TyphoonTaskingTool.Data;

#nullable disable

namespace TyphoonTaskingTool.Migrations.TaskingTool
{
    [DbContext(typeof(TmscDbContext))]
    partial class TmscDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TyphoonTaskingTool.Models.LookupRank", b =>
                {
                    b.Property<int>("RankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Rank_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RankId"));

                    b.Property<string>("RankNameLong")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Rank_NameLong");

                    b.Property<string>("RankNameShort")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Rank_NameShort");

                    b.Property<string>("RankNatoequiv")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Rank_NATOEquiv");

                    b.HasKey("RankId")
                        .HasName("PK__LOOKUP_R__25BE3A45C8792EA9");

                    b.ToTable("LOOKUP_Rank", (string)null);
                });

            modelBuilder.Entity("TyphoonTaskingTool.Models.LookupStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Status_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("StatusDescription")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Status_Description");

                    b.Property<string>("StatusName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Status_Name");

                    b.HasKey("StatusId")
                        .HasName("PK__LOOKUP_S__5190094C594F5F23");

                    b.ToTable("LOOKUP_Status", (string)null);
                });

            modelBuilder.Entity("TyphoonTaskingTool.Models.LookupTeam", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Team_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("TeamNameLong")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Team_NameLong");

                    b.Property<string>("TeamNameShort")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Team_NameShort");

                    b.HasKey("TeamId")
                        .HasName("PK__LOOKUP_T__02215C6AEBF1AF51");

                    b.ToTable("LOOKUP_Team", (string)null);
                });

            modelBuilder.Entity("TyphoonTaskingTool.Models.LookupUnit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Unit_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitId"));

                    b.Property<string>("UnitNameLong")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Unit_NameLong");

                    b.Property<string>("UnitNameShort")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Unit_NameShort");

                    b.HasKey("UnitId")
                        .HasName("PK__LOOKUP_U__27556B78AA3A02A9");

                    b.ToTable("LOOKUP_Unit", (string)null);
                });

            modelBuilder.Entity("TyphoonTaskingTool.Models.Request", b =>
                {
                    b.Property<Guid>("RequestTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Request_TaskId")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("RankId")
                        .HasColumnType("int")
                        .HasColumnName("Rank_Id");

                    b.Property<bool?>("RequestArchive")
                        .HasColumnType("bit")
                        .HasColumnName("Request_Archive");

                    b.Property<string>("RequestContactPhone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Request_ContactPhone");

                    b.Property<DateTime?>("RequestCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("Request_Created")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("RequestEmailAdd")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Request_EmailAdd");

                    b.Property<string>("RequestFirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Request_FirstName");

                    b.Property<string>("RequestLastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Request_LastName");

                    b.Property<string>("RequestShortId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Request_ShortId");

                    b.Property<string>("RequestTaskDescription")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Request_TaskDescription");

                    b.Property<string>("RequestTitle")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Request_Title");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("Status_Id");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("Team_Id");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int")
                        .HasColumnName("Unit_Id");

                    b.HasKey("RequestTaskId")
                        .HasName("PK__Requests__369BD5A545908220");

                    b.HasIndex("RankId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TeamId");

                    b.HasIndex("UnitId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("TyphoonTaskingTool.Models.RequestUpdate", b =>
                {
                    b.Property<Guid>("UpdateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Update_Id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("RequestTaskId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Request_TaskId");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("Status_Id");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Update_By");

                    b.Property<string>("UpdateDescription")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Update_Description");

                    b.Property<DateTime?>("UpdateTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("Update_TimeStamp")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.HasKey("UpdateId")
                        .HasName("PK__RequestU__C11655E4EB5F5284");

                    b.HasIndex("RequestTaskId");

                    b.HasIndex("StatusId");

                    b.ToTable("RequestUpdates");
                });

            modelBuilder.Entity("TyphoonTaskingTool.Models.Request", b =>
                {
                    b.HasOne("TyphoonTaskingTool.Models.LookupRank", "Rank")
                        .WithMany("Requests")
                        .HasForeignKey("RankId")
                        .HasConstraintName("FK_Request_Rank");

                    b.HasOne("TyphoonTaskingTool.Models.LookupStatus", "Status")
                        .WithMany("Requests")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Request_Status");

                    b.HasOne("TyphoonTaskingTool.Models.LookupTeam", "Team")
                        .WithMany("Requests")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK_Request_Team");

                    b.HasOne("TyphoonTaskingTool.Models.LookupUnit", "Unit")
                        .WithMany("Requests")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_Request_Unit");

                    b.Navigation("Rank");

                    b.Navigation("Status");

                    b.Navigation("Team");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("TyphoonTaskingTool.Models.RequestUpdate", b =>
                {
                    b.HasOne("TyphoonTaskingTool.Models.Request", "RequestTask")
                        .WithMany("RequestUpdates")
                        .HasForeignKey("RequestTaskId")
                        .IsRequired()
                        .HasConstraintName("FK_UpdateRequest");

                    b.HasOne("TyphoonTaskingTool.Models.LookupStatus", "Status")
                        .WithMany("RequestUpdates")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_UpdateStatus");

                    b.Navigation("RequestTask");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("TyphoonTaskingTool.Models.LookupRank", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("TyphoonTaskingTool.Models.LookupStatus", b =>
                {
                    b.Navigation("RequestUpdates");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("TyphoonTaskingTool.Models.LookupTeam", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("TyphoonTaskingTool.Models.LookupUnit", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("TyphoonTaskingTool.Models.Request", b =>
                {
                    b.Navigation("RequestUpdates");
                });
#pragma warning restore 612, 618
        }
    }
}
